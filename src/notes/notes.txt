---------------------------------------------------
NGRX Configuration for Angular Routing Application
----------------------------------------------------

Install NGRX Librarires
------------------------------------------------
npm install @ngrx/store
npm install @ngrx/store-devtools
npm install @ngrx/effects
npm install @ngrx/schematics --save-dev

configure @ngrx/schematics with Angular CLI
-------------------------------------------
	ng add @ngrx/schematics@latest

Root (store , effect) (/src/app folder)
---------------------
ng generate @ngrx/schematics:store State --root --module app.module.ts
ng generate @ngrx/schematics:effect Root --root --module app.module.ts --group

customers(actions , reducers , effects) (customers folder)
---------------------------------------
ng g module customers --route customers --module app.module.ts

ng generate @ngrx/schematics:store State --module customers.module.ts
ng generate @ngrx/schematics:effect customer --module customers.module.ts --group

ng generate @ngrx/schematics:reducer customer --group
ng generate @ngrx/schematics:action customer --group


stocks(actions , reducers , effects) (stocks folder)
------------------------------------
ng g module stocks --route stocks --module app.module.ts

ng generate @ngrx/schematics:store State --module stocks.module.ts
ng generate @ngrx/schematics:effect stock --module stocks.module.ts --group

ng generate @ngrx/schematics:reducer stock --group
ng generate @ngrx/schematics:action stock --group


NOTE : change "reducers/index.ts" file with this for each module
		import { environment } from '../../../environments/environment';

----------------------------------------------------------------------------------
Folder Structure
----------------------------------------------------------------------------------
App
---
 -> components
		-> home
		-> navbar
		-> about
		-> contact
 -> services
 -> reducers
 -> effects
 -> customers(module)
		-> components
		-> services
		-> models
		-> actions
		-> reducers
		-> effects
-> stocks(module)
		-> components
		-> services
		-> models
		-> actions
		-> reducers
		-> effects



State :
{
	stock : {
		loading:boolean,
		stocks : [],
		errorMessage : string
	},
	customer : {
		loading:boolean,
		customers : [],
		errorMessage : string
	}
}
